input {
  beats {
    port => 5044
    host => "0.0.0.0"
  }
}

filter {
  # fingerprint opzionale
  fingerprint {
    source  => ["message"]
    target  => "[@metadata][fingerprint]"
    method  => "SHA256"
  }

  # ----------------------------------------------------------------------------
  # APACHE ERROR LOGS
  # ----------------------------------------------------------------------------
  # Esempi Apache 2.4:
  # [Tue Sep 30 10:07:16.123456 2025] [php7:warn] [pid 1234:tid 140735] [client 1.2.3.4:55555] AH01234: message text...
  # [Tue Sep 30 10:07:16.123456 2025] [mpm_event:notice] [pid 1234:tid 5678] AH00094: Command line: ...
  grok {
    match => {
      "message" => [
        # con client ip/port
        "^\[%{HTTPDATE:apache.error.timestamp}\] \[(?<log.logger>[^:\]]+):%{LOGLEVEL:log.level}\](?: \[pid %{NUMBER:process.pid}(?::tid %{NUMBER:process.thread.id})?\])?(?: \[client %{IPORHOST:[client][ip]}(?::%{NUMBER:[client][port]})?\])?\s*(?:AH%{NUMBER:apache.error.code}:\s*)?(?<apache.error.message>.*)$",
        # senza client
        "^\[%{HTTPDATE:apache.error.timestamp}\] \[(?<log.logger>[^:\]]+):%{LOGLEVEL:log.level}\](?: \[pid %{NUMBER:process.pid}(?::tid %{NUMBER:process.thread.id})?\])?\s*(?:AH%{NUMBER:apache.error.code}:\s*)?(?<apache.error.message>.*)$"
      ]
    }
    tag_on_failure => ["_grok_error_fail"]
  }

  # timestamp -> @timestamp
  date {
    match  => [ "apache.error.timestamp", "EEE MMM dd HH:mm:ss.SSSSSS yyyy", "EEE MMM dd HH:mm:ss yyyy" ]
    target => "@timestamp"
  }

  # ECS mapping per Apache errors
  mutate {
    add_field => {
      "[event][dataset]"  => "apache.error"
      "[event][module]"   => "apache"
      "[event][original]" => "%{message}"
      "[event][severity]" => "%{log.level}"
    }
    rename => { 
      "apache.error.message" => "[error][message]"
      "apache.error.code"    => "[error][code]"
    }
    convert => {
      "process.pid"         => "integer"
      "process.thread.id"   => "integer"
      "[client][port]"      => "integer"
      "[error][code]"       => "integer"
    }
    remove_field => ["apache.error.timestamp"]
  }

  # Extract file path and line number from Apache error messages (when present)
  if [error][message] {
    # Extract file paths from error messages
    grok {
      match => {
        "[error][message]" => [
          # Pattern per file path con line number
          "%{GREEDYDATA} in %{UNIXPATH:apache.error.file} on line %{INT:apache.error.line}",
          # Pattern per file path senza line number  
          "%{GREEDYDATA} in %{UNIXPATH:apache.error.file}",
          # Pattern per configurazione files
          "%{GREEDYDATA} file %{UNIXPATH:apache.error.file}",
          # Pattern per script files
          "%{GREEDYDATA} script %{UNIXPATH:apache.error.file}"
        ]
      }
      tag_on_failure => []
    }
    
    # Convert and rename extracted fields
    mutate {
      rename => {
        "apache.error.file" => "[error][file][path]"
        "apache.error.line" => "[error][line][number]"
      }
      convert => {
        "[error][line][number]" => "integer"
      }
    }
    
    # Extract directory and filename if file path exists
    if [error][file][path] {
      grok {
        match => {
          "[error][file][path]" => "^(?<apache.error.dir>/.*/)(?<apache.error.filename>[^/]+)$"
        }
        tag_on_failure => []
      }
      
      mutate {
        rename => {
          "apache.error.dir"      => "[error][file][directory]"
          "apache.error.filename" => "[error][file][name]"
        }
      }
    }
  }

  # ----------------------------------------------------------------------------
  # Index naming con project
  # ----------------------------------------------------------------------------
  mutate {
    add_field => {
      "[@metadata][target_index]" => "apache-error-%{[project]}-%{+YYYY.MM.dd}"
    }
  }
}

output {
  elasticsearch {
    hosts           => ["elasticsearch:9200"]
    user            => "${ELASTICSEARCH_USERNAME}"
    password        => "${ELASTICSEARCH_PASSWORD}"
    index           => "%{[@metadata][target_index]}"
    manage_template => true
    template_name   => "apache-error-logs"
    document_id     => "%{[@metadata][fingerprint]}"
  }

  stdout { codec => rubydebug { metadata => true } }
}